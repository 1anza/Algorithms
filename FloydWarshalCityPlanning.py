# -*- coding: utf-8 -*-
"""PS9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/118ncNjFMSxooLMPRTUlqCMMU8tiiARUZ
"""

import math

#inputs
n = int(input())
coordinates = []
adjMatrix = [[math.inf for x in range(n)] for y in range(n)]

for i in range(n): 
  coordinates.append(tuple(map(int,input().split())))
  adjMatrix[i][i] = 0

m = int(input())

for i in range (m):
  inp = list(map(int,input().split()))
  x, y = coordinates[inp[0]]
  w, z = coordinates[inp[1]]
  adjMatrix[inp[0]][inp[1]] = ((x - w) ** 2 + (y - z) ** 2)** 0.5
  adjMatrix[inp[1]][inp[0]] = ((x - w) ** 2 + (y - z) ** 2)** 0.5

# Floyd-Warshal
for r in range(0,n):
  for u in range(0,n):
    for v in range(0,n):
      adjMatrix[u][v] = min(adjMatrix[u][v], adjMatrix[u][r] + adjMatrix[r][v])

sum = 0
for i in range(0,n):
  for j in range(0,i):
    sum += adjMatrix[i][j]

def findCoordinates(u,v):
  x, y = coordinates[u]
  w, z = coordinates[v]
  return ((x - w) ** 2 + (y - z) ** 2)** 0.5

totalSaved = 0
for u in range(0, n):
  for v in range(1, n):
    w = findCoordinates(u,v)
    print('u: ', u, ' v: ', v)
    print('w: ', w)
    print('adjMatrix: ', adjMatrix[u][v])
    if(adjMatrix[u][v] > w):
      reduce = 0
      for i in range(0, n):
        for j in range(0, n):
          print('adj: ', adjMatrix[i][j], 'less: ', adjMatrix[i][u] + w + adjMatrix[v][j])
          if(adjMatrix[i][j] > adjMatrix[i][u] + w + adjMatrix[v][j]):
            reduce += adjMatrix[i][j] - (adjMatrix[i][u] + w + adjMatrix[v][j])
            print('-------------------- Made it: ', reduce)         
      if reduce > totalSaved: totalSaved = reduce
print(sum - totalSaved)